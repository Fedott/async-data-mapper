{
    "registrar": [
        {
            "language": "php",
            "provider": "class_interface",
            "signature": [
                "PHPUnit\\Framework\\Assert::assertAttributeInstanceOf",
                "PHPUnit\\Framework\\Assert::assertAttributeNotInstanceOf",
                "PHPUnit\\Framework\\Assert::assertClassHasAttribute:1",
                "PHPUnit\\Framework\\Assert::assertClassHasStaticAttribute:1",
                "PHPUnit\\Framework\\Assert::assertClassNotHasAttribute:1",
                "PHPUnit\\Framework\\Assert::assertClassNotHasStaticAttribute:1",
                "PHPUnit\\Framework\\Assert::assertContainsOnlyInstancesOf",
                "PHPUnit\\Framework\\Assert::assertInstanceOf",
                "PHPUnit\\Framework\\Assert::assertNotInstanceOf",

                "PHPUnit\\Framework\\Assert::isInstanceOf",
                "PHPUnit\\Framework\\Assert::containsOnlyInstancesOf",
                "PHPUnit_Framework_Constraint_TraversableContainsOnly::__construct",

                "PHPUnit\\Framework\\TestCase::createMock",
                "PHPUnit\\Framework\\TestCase::getMock",
                "PHPUnit\\Framework\\TestCase::getMockBuilder",
                "PHPUnit\\Framework\\TestCase::getMockForAbstractClass",
                "PHPUnit\\Framework\\TestCase::getMockForTrait",
                "PHPUnit\\Framework\\TestCase::getMockWithoutInvokingTheOriginalConstructor",

                "PHPUnit\\Framework\\TestCase::getStaticAttribute",
                "PHPUnit\\Framework\\TestCase::readAttribute",

                "PHPUnit\\Framework\\TestCase::prophesize"
            ],
            "signatures": [
                {
                    "class": "PHPUnit\\Framework\\TestCase",
                    "method": "createMock",
                    "type": "type"
                },
                {
                    "class": "PHPUnit\\Framework\\TestCase",
                    "method": "getMock",
                    "type": "type"
                },
                {
                    "class": "PHPUnit\\Framework\\TestCase",
                    "method": "getMockForAbstractClass",
                    "type": "type"
                },
                {
                    "class": "PHPUnit\\Framework\\TestCase",
                    "method": "getMockForTrait",
                    "type": "type"
                },
                {
                    "class": "PHPUnit\\Framework\\TestCase",
                    "method": "getMockWithoutInvokingTheOriginalConstructor",
                    "type": "type"
                }
            ]
        },
        {
            "language": "php",
            "provider": "trait",
            "signature": [
                "PHPUnit\\Framework\\TestCase::getObjectForTrait"
            ],
            "signatures": [
                {
                    "class": "PHPUnit\\Framework\\TestCase",
                    "method": "getObjectForTrait",
                    "type": "type"
                }
            ]
        },
        {
            "language": "php",
            "provider": "exception_classes",
            "signature": [
                "PHPUnit\\Framework\\TestCase::setExpectedException"
            ]
        },
        {
            "language": "php",
            "provider": "internal_types",
            "signature": [
                "PHPUnit\\Framework\\Assert::assertAttributeInternalType",
                "PHPUnit\\Framework\\Assert::assertAttributeContainsOnly",
                "PHPUnit\\Framework\\Assert::assertAttributeNotContainsOnly",
                "PHPUnit\\Framework\\Assert::assertContainsOnly",
                "PHPUnit\\Framework\\Assert::assertInternalType",
                "PHPUnit\\Framework\\Assert::assertNotAttributeInternalType",
                "PHPUnit\\Framework\\Assert::assertNotContainsOnly",
                "PHPUnit\\Framework\\Assert::assertNotInternalType",

                "PHPUnit\\Framework\\Assert::containsOnly",
                "PHPUnit_Framework_Constraint_TraversableContainsOnly::__construct",

                "PHPUnit\\Framework\\Assert::isType",
                "PHPUnit_Framework_Constraint_IsType::__construct",
            ]
        }
    ]
}
